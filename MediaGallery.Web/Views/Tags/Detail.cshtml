@using System.Text.Json
@model string
@{
    var tagName = string.IsNullOrEmpty(Model) ? "architecture" : Model;
    ViewData["Title"] = $"Tag: {tagName}";
    var detail = new
    {
        tag = tagName,
        description = "A curated selection featuring strong lines, modern facades, and structural details.",
        relatedTags = new[] { "geometry", "urban", "minimal" },
        media = new[]
        {
            new { type = "photo", title = "Detail shot", filePath = "photos/detail-shot.jpg", width = 2048, height = 1365, isAccessible = true, score = 0.93 },
            new { type = "video", title = "Walkthrough", filePath = "videos/detail-walkthrough.mp4", width = 1920, height = 1080, isAccessible = true, score = 0.88 },
            new { type = "photo", title = "Concept render", filePath = "photos/concept-render.jpg", width = 1600, height = 900, isAccessible = true, score = 0.91 }
        }
    };
}

<section class="page-header">
    <h1>@ViewData["Title"]</h1>
    <p class="lead">@detail.description</p>
</section>

<section class="tag-detail" data-tag-view="detail" data-tag="@detail.tag" data-media-root="@Url.Content("~/media/")">
    <div class="tag-detail__meta">
        <h2>Related tags</h2>
        <ul class="chip-list">
            @foreach (var related in detail.relatedTags)
            {
                <li><a class="chip" asp-controller="Tags" asp-action="Detail" asp-route-tag="@related">@related</a></li>
            }
        </ul>
    </div>

    <div class="media-gallery-grid" data-gallery aria-label="Media for @detail.tag"></div>
    <div class="scroll-status" data-scroll-status aria-live="polite"></div>
</section>

<script type="application/json" id="tag-detail-data">
    @Html.Raw(JsonSerializer.Serialize(detail))
</script>

@section Scripts {
    <script type="module" src="~/js/tagGallery.js" asp-append-version="true"></script>
}
