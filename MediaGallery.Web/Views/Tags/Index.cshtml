@model TagIndexViewModel
@using System.Linq
@using System.Text.Json
@{
    ViewData["Title"] = "Tags";
    var jsonOptions = new JsonSerializerOptions(JsonSerializerDefaults.Web);
    var detailEndpoint = Url.Action("DetailData", new { pageSize = 12 });
}

<section class="page-header">
    <div>
        <h1>@ViewData["Title"]</h1>
        <p class="lead">Browse prominent tags and open their dedicated media streams.</p>
    </div>
    <div class="page-header__meta">
        <span class="badge">@Model.Pagination.PageSize.ToString("N0") per page</span>
        <span class="badge badge--subtle">Page @Model.Pagination.PageNumber</span>
    </div>
</section>

<section class="tag-browser" data-tag-view="index" data-detail-endpoint="@detailEndpoint" data-media-root="@Url.Content("~/media/")">
    <div class="tag-browser__list" data-tag-list aria-label="Available tags">
        @foreach (var tag in Model.Tags)
        {
            <article class="tag-card" data-tag="@tag.Tag" data-count="@tag.PhotoCount">
                <header>
                    <h2>@tag.Tag</h2>
                    <p>@tag.PhotoCount.ToString("N0") media items</p>
                </header>
                <footer class="tag-card__actions">
                    <button class="btn" type="button" data-action="preview-tag" data-tag="@tag.Tag">Preview media</button>
                    <a class="btn btn--ghost" asp-controller="Tags" asp-action="Detail" asp-route-tag="@tag.Tag">Open detail</a>
                </footer>
            </article>
        }
        @if (!Model.Tags.Any())
        {
            <article class="tag-card is-empty">
                <p>No tags available.</p>
            </article>
        }
    </div>

    <aside class="tag-browser__preview" aria-live="polite">
        <h2 class="tag-browser__preview-title" data-preview-title>Preview</h2>
        <div class="media-gallery-grid" data-preview-gallery></div>
        <div class="scroll-status" data-scroll-status aria-live="polite">Select a tag to load preview media.</div>
    </aside>
</section>

<script type="application/json" id="tag-index-metadata">
    @Html.Raw(JsonSerializer.Serialize(Model.Tags.Select(tag => new { tag = tag.Tag, count = tag.PhotoCount }), jsonOptions))
</script>

@section Scripts {
    <script type="module" src="~/js/tagGallery.js" asp-append-version="true"></script>
}
