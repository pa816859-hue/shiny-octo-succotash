@model UserProfilePageViewModel
@using System.Linq
@using System.Text.Json
@{
    var displayName = string.IsNullOrWhiteSpace(Model.Profile.User.DisplayName)
        ? $"User {Model.Profile.User.UserId}"
        : Model.Profile.User.DisplayName;
    ViewData["Title"] = displayName;
    var jsonOptions = new JsonSerializerOptions(JsonSerializerDefaults.Web);
    var feedEndpoint = Url.Action(
        "ProfileData",
        new
        {
            id = Model.Profile.User.UserId,
            pageSize = Model.Query.PageSize,
            channelId = Model.Query.ChannelId,
            mediaOnly = Model.Query.MediaOnly,
            sortOrder = Model.Query.SortOrder
        });
    var tagList = Model.Profile.User.Tags.OrderByDescending(tag => tag.Weight).Take(24).ToList();
}

<section class="page-header">
    <div>
        <h1>@displayName</h1>
        <p class="lead">User ID @Model.Profile.User.UserId.ToString("N0") &middot; Last update @Model.Profile.User.LastUpdate.ToLocalTime().ToString("f")</p>
    </div>
    <div class="page-header__meta">
        @if (!string.IsNullOrWhiteSpace(Model.Profile.User.Username))
        {
            <span class="badge">@Model.Profile.User.Username</span>
        }
        <span class="badge badge--subtle">@Model.Profile.Messages.Count.ToString("N0") messages in view</span>
    </div>
</section>

<section class="user-profile" data-media-root="@Url.Content("~/media/")">
    <aside class="user-profile__sidebar">
        <div class="user-profile__identity">
            <h2>Profile tags</h2>
            @if (tagList.Any())
            {
                <ul class="chip-list chip-list--column">
                    @foreach (var tag in tagList)
                    {
                        <li>
                            <span class="chip chip--static">@tag.Tag <span class="chip__meta">weight @tag.Weight</span></span>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="panel__empty">No profile tags captured yet.</p>
            }
        </div>
        <div class="user-profile__filters" aria-label="Sort and filter media">
            <div class="button-group">
                <a class="btn" asp-controller="Messages" asp-action="Recent" asp-route-userId="@Model.Profile.User.UserId">Open in global feed</a>
            </div>
        </div>
    </aside>

    <div class="user-profile__gallery">
        <div class="recent-messages recent-messages--profile" data-feed-endpoint="@feedEndpoint" data-initial-page="@Model.Query.Page" data-media-root="@Url.Content("~/media/")" data-has-more="@Model.Profile.Pagination.HasNextPage.ToString().ToLowerInvariant()">
            <div class="toolbar" role="toolbar" aria-label="User message controls">
                <div class="button-group">
                    <button class="btn" data-action="toggle-layout" type="button">Toggle layout</button>
                    <button class="btn" data-action="start-slideshow" type="button">Start slideshow</button>
                </div>
                <div class="button-group">
                    <label class="switch" for="user-media-only">
                        <input id="user-media-only" type="checkbox" data-filter="onlyMedia" @(Model.Query.MediaOnly ? "checked" : string.Empty) />
                        <span>Media only</span>
                    </label>
                </div>
            </div>

            <div class="media-gallery-grid" data-gallery tabindex="0" aria-live="polite"></div>
            <div class="scroll-status" data-scroll-status aria-live="polite"></div>
            <div class="scroll-sentinel" data-scroll-sentinel></div>
        </div>
    </div>
</section>

<script type="application/json" id="recent-messages-data">
    @Html.Raw(JsonSerializer.Serialize(Model.Profile.Messages, jsonOptions))
</script>

@section Scripts {
    <script type="module" src="~/js/recentMessages.js" asp-append-version="true"></script>
}
